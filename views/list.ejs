<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>승뮤니티</title>
    <meta name="description" content="게시물 목록 페이지입니다. 업로드된 게시물을 확인하고, 
    검색하고, 새로운 게시글을 작성할 수 있습니다.">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="\main.css">
</head>
<body class="fix" style="position: relative;">
    <%- include('nav.ejs', { isRead: isRead }) %>
    <div class="section2">
        <div class="section2-1"></div>
        <%for (let i=0; i<글목록.length; i++){ %>
            <% k = 0 %>
            <div class="white-bg">
                <div class="list-box">
                <a href="/detail/<%= 글목록[i]._id %>" aria-label="게시물 세부사항 페이지로 이동">
                    <img class="list-left" src='/image/dinosaur.webp' onerror="this.src='/image/dinosaur.webp'" 
                    alt="썸네일" loading="lazy" />
                </a>
                    <h4 class="list-right">
                        <a href="/detail/<%= 글목록[i]._id %>" aria-label="게시물 세부사항 페이지로 이동"><%= 글목록[i].title %></a>
                        <span class="delete" data-id="<%= 글목록[i]._id %>">
                            <ion-icon style="font-size: 20px;" name="trash-outline"
                            data-id="<%= 글목록[i]._id %>"></ion-icon>
                        </span>
                        <p>작성자: <%= 글목록[i].작성자 %></p>
                        <div>
                            <button class="btn" data-id="<%= 글목록[i].작성자_id %>" aria-label="<%= 글목록[i].작성자 %> 와 채팅"
                                data-name="<%= 글목록[i].작성자 %>">
                                <a class="btn-a" href="/chat/matches?name=<%= 글목록[i].작성자 %>&id=<%= 글목록[i].작성자_id %>">채팅하기</a>
                            </button>
                        </div>
                    </h4>
                </div>
                
            <p style="clear: both; margin: 0px;"></p>
            </div>      
        <% }%>
        <div style="position: relative;">
            <div class="page-box">
                <p></p>
                <ion-icon style="font-size: 24px;" class="first" name="ellipsis-horizontal-outline"></ion-icon>
                <ion-icon class="back" name="caret-back-outline"></ion-icon>
                <%for (let i=((Math.ceil(페이지넘버/5))*5)-4; i<((Math.ceil(페이지넘버/5))*5)+1; i++){ %>
                    <% if(i>(Math.ceil(글수/5))){break} %>
                    <span style="margin: 3px;" class="page-btn" data-num="<%= i %>"><%= i %></span>
                <% }%>
                <ion-icon class="forward" name="caret-forward-outline"></ion-icon>
                <ion-icon style="font-size: 24px;" class="last" name="ellipsis-horizontal-outline"></ion-icon>
            </div>
            <div class="newPost">
                <a href="/write" aria-label="글쓰기 페이지로 이동">글쓰기✏️</a>
            </div>
        </div>
        <div class="ccontainer">
            <div class="search-bar">
                <input type="text" class="search_2" id="ssearch-input" placeholder=" 글제목으로 검색">
                <button type="submit" id="ssearch" aria-label="게시물 검색">
                    <ion-icon name="search-outline"></ion-icon>
                </button>
            </div>
        </div>
        <div class="curtain" id="draggableElement">
            <div class="draggableChatbox">
                <div id="chatBox"></div>
            </div>
            <div class="input-group mb-3" style="width: 100%; ">
                <input type="text" id="input1" class="form-control" aria-describedby="채팅 메세지 작성"  
                placeholder="엔터시전송">
                <button type="button" id="button-addon2" aria-label="채팅 메세지 전송">
                <ion-icon style="color: white; font-size: 18px;
                margin-top: 3px;" name="paper-plane-outline"></ion-icon>
                </button>
            </div>
        </div>
        <div style="clear: both;"></div>
    </div>
    <script src="/socketChat.js"></script>
    <script type="module">
        import {makeSnowflake2} from '/snow.js';
        window.onload = function(){
            for (let i = 0; i < 40; i++){
                setTimeout(makeSnowflake2(), 500 * i);
            }
        }      
    </script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script>
        $(document).ready(function() {
            const currentPage = parseInt('<%= 페이지넘버 %>');
            const totalPosts = parseInt('<%= 글수 %>');

            // 게시글 삭제
            for (let i=0; i<'<%= 글목록.length %>'; i++){ 
                document.querySelectorAll('.delete')[i].addEventListener('click', async function(e){
                    if (confirm('정말 삭제하시겠습니까?')==true){
                        try{
                            const response = await fetch('/list/?docid=' + e.target.dataset.id, {
                                method : 'DELETE',
                            })
                            if(response.ok){
                                alert('삭제가 완료되었습니다.');
                                location.reload();
                                return
                            } else if(response.status == 401){
                                alert('로그인 정보가 없습니다.')
                            } else if(response.status == 403){
                                alert('삭제할 수 없습니다.')
                            } else if (response.status == 500){
                                alert('서버 오류가 발생했습니다');
                            } else {
                                alert('알 수 없는 오류가 발생했습니다');
                            }
                        } catch(error){
                            alert('네트워크 오류가 발생했습니다');
                        }
                    }
                })
            }
            
            // 게시글 검색
            function search(){
                var searchWord = $('#ssearch-input').val()
                if (!searchWord) {
                    alert('검색어를 입력해 주세요.');
                    return;
                }
                window.location.replace('/list/search?value='+encodeURIComponent(searchWord))
            }
            $('#ssearch').click(function(){
                search()
            })
            $('.search_2').keypress(function(e){
                if (e.keyCode===13){
                    search()
                }
            })

            // 페이지 버튼에 현재 페이지 표시
            document.getElementsByClassName('page-btn')[(currentPage-1)%5].classList.add('nowPage');
            
            // 클릭한 숫자에 해당하는 페이지로 이동
            $('.page-btn').click(function(e){
                $('.page-btn').removeClass('nowPage')
                const num = e.target.dataset.num;
                window.location.href=`/list/${num}?페이지넘버=`+num;
            });

            // 첫 번째 페이지로 이동
            $('.first').click(function(){
                window.location.href=`/list/1?페이지넘버=1`;
            })
            // 마지막 페이지로 이동
            $('.last').click(function(){
                const lastPage = Math.ceil(totalPosts/5)
                window.location.href=`/list/${lastPage}?페이지넘버=`+ lastPage;
            })  
            // -1 페이지로 이동
            $('.back').click(function(){
                const prevPage = currentPage - 1;
                window.location.href=`/list/prev/<%= 글목록[글목록.length-글목록.length]._id %>?pageNum=`+ prevPage;
            })
            // +1 페이지로 이동
            $('.forward').click(function(){
                const nextPage = currentPage + 1;
                window.location.href=`/list/next/<%= 글목록[글목록.length-1]._id %>?pageNum=`+ nextPage;
            })

            const socket = io();

            // 웹소켓 채팅 발신
            function sendMessage(){
                const message = $('#input1').val();
                if (message) { 
                    socket.emit('user-send', message);
                    $('#input1').val(''); 
                }
            }
            $('#button-addon2').click(sendMessage)
            $('.input-group').keypress(function(e){
                if (e.keyCode===13){
                    sendMessage()
                }
            })

            // 웹소켓 채팅 데이터를 채팅박스에 표시
            socket.on('broadcast', function(data){        
                const chatMessage = `<div class="chatOne"> 🐵${data}<br/><div>`
                $('#chatBox').append(chatMessage);
                const chatBox = document.querySelector('.draggableChatbox').scrollHeight;
                $('.draggableChatbox').scrollTop(chatBox+100); 
            })

            // 메세지를 읽고 뒤로가기를 했을 때 메세지 읽음 표시
            window.addEventListener('pageshow', async (event) => {
                const what = {
                    content : "list",
                }
                const response = await fetch('/log/locations', {
                    method : 'PUT',
                    headers : { 'Content-Type' : 'application/json' },
                    body : JSON.stringify(what)
                })
                if(!response.ok){
                    return
                } else {
                    $('.navigation').load(location.href+' .navigation');
                }
            });
        })
        // 썸네일 이미지 최적화 api 요청
        document.addEventListener('DOMContentLoaded', async function() {
            const urlArray = '<%= thumbailUrls %>'.split(',');
            try {
                const response = await fetch('/optimize/thumbnails', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(urlArray)
                });
                if (response.ok) {
                    const responseData = await response.json();
                    const imgElements = document.querySelectorAll('.list-left');
                    responseData.forEach((src, index) => {
                        if (imgElements[index]) {
                            imgElements[index].src = src;
                        }
                    });
                    return
                } else if (response.status == 404){
                    console.log('썸네일 이미지 업로드에 실패했습니다.')
                } else if (response.status == 500) {
                    console.log('서버 오류가 발생했습니다');
                } else {
                    console.log('알 수 없는 오류가 발생했습니다');
                }
            } catch (error) {
                console.error('네트워크 오류가 발생했습니다')
            }
        });
    </script>
    

</body>


</html>